{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/nicholasharvey/Desktop/programming/techChased/web/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/nicholasharvey/Desktop/programming/techChased/web/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/nicholasharvey/Desktop/programming/techChased/web/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectDestructuringEmpty from \"/Users/nicholasharvey/Desktop/programming/techChased/web/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty\";\n\nvar _jsxFileName = \"/Users/nicholasharvey/Desktop/programming/techChased/web/src/pages/register.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Button, Box } from \"@chakra-ui/react\";\nimport { Form, Formik } from \"formik\";\nimport { MeDocument, useRegisterMutation } from \"../generated/graphql\";\nimport { withApollo } from \"../utils/withApollo\";\nimport { useRouter } from \"next/router\";\nimport { toErrorMap } from \"../utils/toErrorMap\";\nimport { InputField } from \"../components/inputField\";\nimport { Wrapper } from \"../components/Wrapper\";\n\nvar Register = function Register(_ref) {\n  _s();\n\n  _objectDestructuringEmpty(_ref);\n\n  var router = useRouter();\n\n  var _useRegisterMutation = useRegisterMutation(),\n      _useRegisterMutation2 = _slicedToArray(_useRegisterMutation, 1),\n      register = _useRegisterMutation2[0];\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    variant: \"small\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        email: \"\",\n        username: \"\",\n        password: \"\"\n      },\n      onSubmit: /*#__PURE__*/function () {\n        var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, _ref2) {\n          var _response$data, _response$data2;\n\n          var setErrors, response;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  setErrors = _ref2.setErrors;\n                  _context.next = 3;\n                  return register({\n                    variables: {\n                      options: values\n                    },\n                    update: function update(cache, _ref4) {\n                      var data = _ref4.data;\n                      cache.writeQuery({\n                        query: MeDocument,\n                        data: {\n                          __typename: \"Query\",\n                          me: data === null || data === void 0 ? void 0 : data.register.user\n                        }\n                      });\n                    }\n                  });\n\n                case 3:\n                  response = _context.sent;\n\n                  if ((_response$data = response.data) !== null && _response$data !== void 0 && _response$data.register.errors) {\n                    setErrors(toErrorMap(response.data.register.errors));\n                  } else if ((_response$data2 = response.data) !== null && _response$data2 !== void 0 && _response$data2.register.user) {\n                    if (typeof router.query.next === \"string\") {\n                      router.push(router.query.next);\n                    } else {\n                      // worked\n                      router.push(\"/\");\n                    }\n                  }\n\n                case 5:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x, _x2) {\n          return _ref3.apply(this, arguments);\n        };\n      }(),\n      children: function children(_ref5) {\n        var isSubmitting = _ref5.isSubmitting;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            p: 4,\n            children: [/*#__PURE__*/_jsxDEV(InputField, {\n              name: \"username\",\n              placeholder: \"username \",\n              label: \"Username \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(InputField, {\n              name: \"email\",\n              placeholder: \"email \",\n              label: \"Email \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Box, {\n              mt: 4,\n              children: /*#__PURE__*/_jsxDEV(InputField, {\n                name: \"password\",\n                placeholder: \"password\",\n                label: \"Password\",\n                type: \"password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Button, {\n              mt: 4,\n              type: \"submit\",\n              isLoading: isSubmitting,\n              colorScheme: \"teal\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, _this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Register, \"+jIDrcLSNrHT9k8ae+O8lecjNWk=\", false, function () {\n  return [useRouter, useRegisterMutation];\n});\n\n_c = Register;\nexport default withApollo({\n  ssr: false\n})(Register);\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/nicholasharvey/Desktop/programming/techChased/web/src/pages/register.tsx"],"names":["React","Button","Box","Form","Formik","MeDocument","useRegisterMutation","withApollo","useRouter","toErrorMap","InputField","Wrapper","Register","router","register","email","username","password","values","setErrors","variables","options","update","cache","data","writeQuery","query","__typename","me","user","response","errors","next","push","isSubmitting","ssr"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Button, Box } from \"@chakra-ui/react\";\nimport { Form, Formik } from \"formik\";\nimport { MeDocument, MeQuery, useRegisterMutation } from \"../generated/graphql\";\nimport { withApollo } from \"../utils/withApollo\";\nimport { useRouter } from \"next/router\";\nimport { toErrorMap } from \"../utils/toErrorMap\";\nimport { InputField } from \"../components/inputField\";\nimport { Wrapper } from \"../components/Wrapper\";\n\nconst Register: React.FC<{}> = ({}) => {\n  const router = useRouter();\n  const [register] = useRegisterMutation();\n  return (\n    <Wrapper variant=\"small\">\n      <Formik\n        initialValues={{ email: \"\", username: \"\", password: \"\" }}\n        onSubmit={async (values, { setErrors }) => {\n          const response = await register({\n            variables: { options: values },\n            update: (cache, { data }) => {\n              cache.writeQuery<MeQuery>({\n                query: MeDocument,\n                data: {\n                  __typename: \"Query\",\n                  me: data?.register.user,\n                },\n              });\n            },\n          });\n          if (response.data?.register.errors) {\n            setErrors(toErrorMap(response.data.register.errors));\n          } else if (response.data?.register.user) {\n            if (typeof router.query.next === \"string\") {\n              router.push(router.query.next);\n            } else {\n              // worked\n              router.push(\"/\");\n            }\n          }\n        }}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <Box p={4}>\n              <InputField\n                name=\"username\"\n                placeholder=\"username \"\n                label=\"Username \"\n              />\n              <InputField name=\"email\" placeholder=\"email \" label=\"Email \" />\n              <Box mt={4}>\n                <InputField\n                  name=\"password\"\n                  placeholder=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                />\n              </Box>\n              <Button\n                mt={4}\n                type=\"submit\"\n                isLoading={isSubmitting}\n                colorScheme=\"teal\"\n              >\n                Login\n              </Button>\n            </Box>\n          </Form>\n        )}\n      </Formik>\n    </Wrapper>\n  );\n};\n\nexport default withApollo({ ssr: false })(Register);\n"]},"metadata":{},"sourceType":"module"}