{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/nicholasharvey/Desktop/programming/techChased/web/src/pages/index.tsx\";\nimport { Heading, Stack } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { Layout } from \"../components/Layout\";\nimport { useProjectsQuery } from \"../generated/graphql\";\nimport { withApollo } from \"../utils/withApollo\";\n\nconst Index = ({}) => {\n  const {\n    data,\n    error,\n    loading,\n    fetchMore,\n    variables\n  } = useProjectsQuery();\n\n  if (!loading && !data) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"your query failed for some reason\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [error === null || error === void 0 ? void 0 : error.message, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: !data && loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Stack, {\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        children: \" Your Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), data === null || data === void 0 ? void 0 : data.projects.map(p => !p ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: p.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 51\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\nexport default withApollo({\n  ssr: true\n})(Index);","map":{"version":3,"sources":["/Users/nicholasharvey/Desktop/programming/techChased/web/src/pages/index.tsx"],"names":["Heading","Stack","React","Layout","useProjectsQuery","withApollo","Index","data","error","loading","fetchMore","variables","message","projects","map","p","id","ssr"],"mappings":";;AAAA,SAASA,OAAT,EAAkBC,KAAlB,QAA+B,kBAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AAEA,SAASC,UAAT,QAA2B,qBAA3B;;AAEA,MAAMC,KAAe,GAAG,CAAC,EAAD,KAAQ;AAC9B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,OAAf;AAAwBC,IAAAA,SAAxB;AAAmCC,IAAAA;AAAnC,MAAiDP,gBAAgB,EAAvE;;AAEA,MAAI,CAACK,OAAD,IAAY,CAACF,IAAjB,EAAuB;AACrB,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,mBAAMC,KAAN,aAAMA,KAAN,uBAAMA,KAAK,CAAEI,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AAED,sBACE,QAAC,MAAD;AAAA,cACG,CAACL,IAAD,IAASE,OAAT,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,gBAGC,QAAC,KAAD;AAAA,8BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGF,IAFH,aAEGA,IAFH,uBAEGA,IAAI,CAAEM,QAAN,CAAeC,GAAf,CAAoBC,CAAD,IAAQ,CAACA,CAAD,GAAK,IAAL,gBAAY;AAAA,kBAAMA,CAAC,CAACC;AAAR;AAAA;AAAA;AAAA;AAAA,cAAvC,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAxBD;;AA0BA,eAAeX,UAAU,CAAC;AAAEY,EAAAA,GAAG,EAAE;AAAP,CAAD,CAAV,CAA0BX,KAA1B,CAAf","sourcesContent":["import { Heading, Stack } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { Layout } from \"../components/Layout\";\nimport { useProjectsQuery } from \"../generated/graphql\";\n\nimport { withApollo } from \"../utils/withApollo\";\n\nconst Index: React.FC = ({}) => {\n  const { data, error, loading, fetchMore, variables } = useProjectsQuery();\n\n  if (!loading && !data) {\n    return (\n      <div>\n        <div>your query failed for some reason</div>\n        <div>{error?.message} </div>\n      </div>\n    );\n  }\n\n  return (\n    <Layout>\n      {!data && loading ? (\n        <div>loading</div>\n      ) : (\n        <Stack>\n          <Heading> Your Projects</Heading>\n          {data?.projects.map((p) => (!p ? null : <div>{p.id}</div>))}\n        </Stack>\n      )}\n    </Layout>\n  );\n};\n\nexport default withApollo({ ssr: true })(Index);\n"]},"metadata":{},"sourceType":"module"}