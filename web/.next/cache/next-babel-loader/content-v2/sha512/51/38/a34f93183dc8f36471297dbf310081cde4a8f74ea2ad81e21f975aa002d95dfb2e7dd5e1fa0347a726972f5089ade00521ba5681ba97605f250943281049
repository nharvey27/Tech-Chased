{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _objectDestructuringEmpty from \"/Users/nicholasharvey/Desktop/programming/techChased/web/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty\";\n\nvar _jsxFileName = \"/Users/nicholasharvey/Desktop/programming/techChased/web/src/pages/index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Stack } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { Layout } from \"../components/Layout\";\nimport { useProjectsQuery } from \"../generated/graphql\";\nimport { withApollo } from \"../utils/withApollo\";\n\nvar Index = function Index(_ref) {\n  _s();\n\n  _objectDestructuringEmpty(_ref);\n\n  var _useProjectsQuery = useProjectsQuery(),\n      data = _useProjectsQuery.data,\n      error = _useProjectsQuery.error,\n      loading = _useProjectsQuery.loading,\n      fetchMore = _useProjectsQuery.fetchMore,\n      variables = _useProjectsQuery.variables;\n\n  if (!loading && !data) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"your query failed for some reason\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [error === null || error === void 0 ? void 0 : error.message, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, _this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: !data && loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, _this) : /*#__PURE__*/_jsxDEV(Stack, {\n      children: data === null || data === void 0 ? void 0 : data.projects.map(function (p) {\n        return !p ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: p.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 51\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Index, \"6KDOpTX3Ey7MFYWXvoTeCCj8sVw=\", false, function () {\n  return [useProjectsQuery];\n});\n\n_c = Index;\nexport default withApollo({\n  ssr: true\n})(Index);\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/nicholasharvey/Desktop/programming/techChased/web/src/pages/index.tsx"],"names":["Stack","React","Layout","useProjectsQuery","withApollo","Index","data","error","loading","fetchMore","variables","message","projects","map","p","id","ssr"],"mappings":";;;;;;;AAAA,SAASA,KAAT,QAAsB,kBAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AAEA,SAASC,UAAT,QAA2B,qBAA3B;;AAEA,IAAMC,KAAe,GAAG,SAAlBA,KAAkB,OAAQ;AAAA;;AAAA;;AAAA,0BACyBF,gBAAgB,EADzC;AAAA,MACtBG,IADsB,qBACtBA,IADsB;AAAA,MAChBC,KADgB,qBAChBA,KADgB;AAAA,MACTC,OADS,qBACTA,OADS;AAAA,MACAC,SADA,qBACAA,SADA;AAAA,MACWC,SADX,qBACWA,SADX;;AAG9B,MAAI,CAACF,OAAD,IAAY,CAACF,IAAjB,EAAuB;AACrB,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AAAA,mBAAMC,KAAN,aAAMA,KAAN,uBAAMA,KAAK,CAAEI,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF;AAAA;AAAA;AAAA;AAAA;AAAA,aADF;AAMD;;AAED,sBACE,QAAC,MAAD;AAAA,cACG,CAACL,IAAD,IAASE,OAAT,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADD,gBAGC,QAAC,KAAD;AAAA,gBACGF,IADH,aACGA,IADH,uBACGA,IAAI,CAAEM,QAAN,CAAeC,GAAf,CAAmB,UAACC,CAAD;AAAA,eAAQ,CAACA,CAAD,GAAK,IAAL,gBAAY;AAAA,oBAAMA,CAAC,CAACC;AAAR;AAAA;AAAA;AAAA;AAAA,iBAApB;AAAA,OAAnB;AADH;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,WADF;AAWD,CAvBD;;GAAMV,K;UACmDF,gB;;;KADnDE,K;AAyBN,eAAeD,UAAU,CAAC;AAAEY,EAAAA,GAAG,EAAE;AAAP,CAAD,CAAV,CAA0BX,KAA1B,CAAf","sourcesContent":["import { Stack } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { Layout } from \"../components/Layout\";\nimport { useProjectsQuery } from \"../generated/graphql\";\n\nimport { withApollo } from \"../utils/withApollo\";\n\nconst Index: React.FC = ({}) => {\n  const { data, error, loading, fetchMore, variables } = useProjectsQuery();\n\n  if (!loading && !data) {\n    return (\n      <div>\n        <div>your query failed for some reason</div>\n        <div>{error?.message} </div>\n      </div>\n    );\n  }\n\n  return (\n    <Layout>\n      {!data && loading ? (\n        <div>loading</div>\n      ) : (\n        <Stack>\n          {data?.projects.map((p) => (!p ? null : <div>{p.id}</div>))}\n        </Stack>\n      )}\n    </Layout>\n  );\n};\n\nexport default withApollo({ ssr: true })(Index);\n"]},"metadata":{},"sourceType":"module"}