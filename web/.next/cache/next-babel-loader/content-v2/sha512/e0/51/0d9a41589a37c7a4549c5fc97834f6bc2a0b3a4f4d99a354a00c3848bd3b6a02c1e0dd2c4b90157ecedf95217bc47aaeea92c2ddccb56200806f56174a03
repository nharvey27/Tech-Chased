{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _objectDestructuringEmpty from \"/Users/nicholasharvey/Desktop/programming/techChased/web/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty\";\n\nvar _jsxFileName = \"/Users/nicholasharvey/Desktop/programming/techChased/web/src/pages/index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Heading } from \"@chakra-ui/react\";\nimport { Container } from \"next/app\";\nimport React from \"react\";\nimport { Layout } from \"../components/Layout\";\nimport { useMeQuery } from \"../generated/graphql\";\nimport { withApollo } from \"../utils/withApollo\";\n\nvar Index = function Index(_ref) {\n  _s();\n\n  _objectDestructuringEmpty(_ref);\n\n  var _useMeQuery = useMeQuery(),\n      data = _useMeQuery.data,\n      error = _useMeQuery.error,\n      loading = _useMeQuery.loading,\n      fetchMore = _useMeQuery.fetchMore,\n      variables = _useMeQuery.variables;\n\n  if (!loading && !data) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"your query failed for some reason\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [error === null || error === void 0 ? void 0 : error.message, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, _this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: !data && loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, _this) : /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        children: \" Your Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, _this), data === null || data === void 0 ? void 0 : data.projects.map(function (p) {\n        return !p ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: p.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 51\n        }, _this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Index, \"xQAbeEKoMqWGkjikZ07yCee5sTU=\", false, function () {\n  return [useMeQuery];\n});\n\n_c = Index;\nexport default withApollo({\n  ssr: true\n})(Index);\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/nicholasharvey/Desktop/programming/techChased/web/src/pages/index.tsx"],"names":["Heading","Container","React","Layout","useMeQuery","withApollo","Index","data","error","loading","fetchMore","variables","message","projects","map","p","id","ssr"],"mappings":";;;;;;;AAAA,SAASA,OAAT,QAA+B,kBAA/B;AACA,SAASC,SAAT,QAA0B,UAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,UAAT,QAA6C,sBAA7C;AAEA,SAASC,UAAT,QAA2B,qBAA3B;;AAEA,IAAMC,KAAe,GAAG,SAAlBA,KAAkB,OAAQ;AAAA;;AAAA;;AAAA,oBACyBF,UAAU,EADnC;AAAA,MACtBG,IADsB,eACtBA,IADsB;AAAA,MAChBC,KADgB,eAChBA,KADgB;AAAA,MACTC,OADS,eACTA,OADS;AAAA,MACAC,SADA,eACAA,SADA;AAAA,MACWC,SADX,eACWA,SADX;;AAG9B,MAAI,CAACF,OAAD,IAAY,CAACF,IAAjB,EAAuB;AACrB,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AAAA,mBAAMC,KAAN,aAAMA,KAAN,uBAAMA,KAAK,CAAEI,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF;AAAA;AAAA;AAAA;AAAA;AAAA,aADF;AAMD;;AAED,sBACE,QAAC,MAAD;AAAA,cACG,CAACL,IAAD,IAASE,OAAT,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADD,gBAGC,QAAC,SAAD;AAAA,8BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEGF,IAFH,aAEGA,IAFH,uBAEGA,IAAI,CAAEM,QAAN,CAAeC,GAAf,CAAmB,UAACC,CAAD;AAAA,eAAQ,CAACA,CAAD,GAAK,IAAL,gBAAY;AAAA,oBAAMA,CAAC,CAACC;AAAR;AAAA;AAAA;AAAA;AAAA,iBAApB;AAAA,OAAnB,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,WADF;AAYD,CAxBD;;GAAMV,K;UACmDF,U;;;KADnDE,K;AA0BN,eAAeD,UAAU,CAAC;AAAEY,EAAAA,GAAG,EAAE;AAAP,CAAD,CAAV,CAA0BX,KAA1B,CAAf","sourcesContent":["import { Heading, Stack } from \"@chakra-ui/react\";\nimport { Container } from \"next/app\";\nimport React from \"react\";\nimport { Layout } from \"../components/Layout\";\nimport { useMeQuery, useProjectsQuery } from \"../generated/graphql\";\n\nimport { withApollo } from \"../utils/withApollo\";\n\nconst Index: React.FC = ({}) => {\n  const { data, error, loading, fetchMore, variables } = useMeQuery();\n\n  if (!loading && !data) {\n    return (\n      <div>\n        <div>your query failed for some reason</div>\n        <div>{error?.message} </div>\n      </div>\n    );\n  }\n\n  return (\n    <Layout>\n      {!data && loading ? (\n        <div>loading</div>\n      ) : (\n        <Container>\n          <Heading> Your Projects</Heading>\n          {data?.projects.map((p) => (!p ? null : <div>{p.id}</div>))}\n        </Container>\n      )}\n    </Layout>\n  );\n};\n\nexport default withApollo({ ssr: true })(Index);\n"]},"metadata":{},"sourceType":"module"}