{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/nicholasharvey/Desktop/programming/techChased/web/src/components/Navbar.tsx\";\nimport { Box, Button, Flex, Heading, Link, Spacer } from \"@chakra-ui/react\";\nimport React, { useState } from \"react\";\nimport NextLink from \"next/link\";\nimport { useMeQuery } from \"../generated/graphql\";\nexport const NavBar = ({}) => {\n  const {\n    data,\n    loading\n  } = useMeQuery();\n  const {\n    0: isOpen,\n    1: updateIsOpen\n  } = useState(false);\n  let body;\n  let sidebar;\n\n  if (!(data !== null && data !== void 0 && data.me)) {\n    body = /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(NextLink, {\n        href: \"/login\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          as: Link,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NextLink, {\n        href: \"/register\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          as: Link,\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this);\n  } else {\n    body = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Flex, {\n        align: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(NextLink, {\n          href: \"/create-post\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            as: Link,\n            mr: 4,\n            children: \"create project\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          mr: 2,\n          children: data.me.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          colorScheme: \"blue\",\n          onClick: () => updateIsOpen(!isOpen),\n          children: \"Open Sidebar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n    sidebar = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        colorScheme: \"blue\",\n        onClick: onOpen,\n        children: \"Open\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n        placement: placement,\n        onClose: onClose,\n        isOpen: isOpen,\n        children: [/*#__PURE__*/_jsxDEV(DrawerOverlay, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(DrawerContent, {\n          children: [/*#__PURE__*/_jsxDEV(DrawerHeader, {\n            borderBottomWidth: \"1px\",\n            children: \"Basic Drawer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(DrawerBody, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Some contents...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Some contents...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Some contents...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this), \">\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [sidebar, /*#__PURE__*/_jsxDEV(Flex, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(Heading, {\n          as: \"h2\",\n          size: \"lg\",\n          children: \"Tech Chased\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Spacer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), body]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};","map":{"version":3,"sources":["/Users/nicholasharvey/Desktop/programming/techChased/web/src/components/Navbar.tsx"],"names":["Box","Button","Flex","Heading","Link","Spacer","React","useState","NextLink","useMeQuery","NavBar","data","loading","isOpen","updateIsOpen","body","sidebar","me","username","onOpen","placement","onClose"],"mappings":"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","sourcesContent":["import { Box, Button, Flex, Heading, Link, Spacer } from \"@chakra-ui/react\";\nimport React, { useState } from \"react\";\nimport NextLink from \"next/link\";\nimport { useMeQuery } from \"../generated/graphql\";\nimport { Sidebar } from \"./Sidebar\";\n\ninterface NavbarProps {}\n\nexport const NavBar: React.FC<NavbarProps> = ({}) => {\n  const { data, loading } = useMeQuery();\n  const [isOpen, updateIsOpen] = useState(false);\n\n  let body;\n  let sidebar;\n\n  if (!data?.me) {\n    body = (\n      <Box>\n        <NextLink href=\"/login\">\n          <Button as={Link}>Login</Button>\n        </NextLink>\n        <NextLink href=\"/register\">\n          <Button as={Link}>Register</Button>\n        </NextLink>\n      </Box>\n    );\n  } else {\n    body = (\n      <>\n        <Flex align=\"center\">\n          <NextLink href=\"/create-post\">\n            <Button as={Link} mr={4}>\n              create project\n            </Button>\n          </NextLink>\n          <Box mr={2}>{data.me.username}</Box>\n          <Button colorScheme=\"blue\" onClick={() => updateIsOpen(!isOpen)}>\n            Open Sidebar\n          </Button>\n        </Flex>\n      </>\n    );\n    sidebar = <>\n     <Button colorScheme=\"blue\" onClick={onOpen}>\n        Open\n      </Button>\n      <Drawer placement={placement} onClose={onClose} isOpen={isOpen}>\n        <DrawerOverlay />\n        <DrawerContent>\n          <DrawerHeader borderBottomWidth=\"1px\">Basic Drawer</DrawerHeader>\n          <DrawerBody>\n            <p>Some contents...</p>\n            <p>Some contents...</p>\n            <p>Some contents...</p>\n          </DrawerBody>\n        </DrawerContent>>\n      </Drawer>\n    </>\n  }\n\n  return (\n    <>\n      {sidebar}\n      <Flex>\n        <Box>\n          <Heading as=\"h2\" size=\"lg\">\n            Tech Chased\n          </Heading>\n        </Box>\n        <Spacer />\n        {body}\n      </Flex>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}