{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/nicholasharvey/Desktop/programming/techChased/web/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/nicholasharvey/Desktop/programming/techChased/web/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/nicholasharvey/Desktop/programming/techChased/web/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectDestructuringEmpty from \"/Users/nicholasharvey/Desktop/programming/techChased/web/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty\";\n\nvar _jsxFileName = \"/Users/nicholasharvey/Desktop/programming/techChased/web/src/pages/login.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Button, Box } from \"@chakra-ui/react\";\nimport { Form, Formik } from \"formik\";\nimport React from \"react\";\nimport { useLoginMutation } from \"../generated/graphql\";\nimport { withApollo } from \"../utils/withApollo\";\nimport { useRouter } from \"next/router\";\nimport { toErrorMap } from \"../utils/toErrorMap\";\nimport { InputField } from \"../components/inputField\";\n\nvar Login = function Login(_ref) {\n  _s();\n\n  _objectDestructuringEmpty(_ref);\n\n  var router = useRouter();\n\n  var _useLoginMutation = useLoginMutation(),\n      _useLoginMutation2 = _slicedToArray(_useLoginMutation, 1),\n      login = _useLoginMutation2[0];\n\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      username: \"\",\n      password: \"\"\n    },\n    onSubmit: /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, _ref2) {\n        var _response$data, _response$data2;\n\n        var setErrors, response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                setErrors = _ref2.setErrors;\n                _context.next = 3;\n                return login({\n                  variables: values\n                });\n\n              case 3:\n                response = _context.sent;\n\n                if ((_response$data = response.data) !== null && _response$data !== void 0 && _response$data.login.errors) {\n                  setErrors(toErrorMap(response.data.login.errors));\n                } else if ((_response$data2 = response.data) !== null && _response$data2 !== void 0 && _response$data2.login.user) {\n                  if (typeof router.query.next === \"string\") {\n                    router.push(router.query.next);\n                  } else {\n                    // worked\n                    router.push(\"/\");\n                  }\n                }\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }(),\n    children: function children(_ref4) {\n      var isSubmitting = _ref4.isSubmitting;\n      return /*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(InputField, {\n            name: \"username\",\n            placeholder: \"username \",\n            label: \"Username \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Box, {\n            mt: 4,\n            children: /*#__PURE__*/_jsxDEV(InputField, {\n              name: \"password\",\n              placeholder: \"password\",\n              label: \"Password\",\n              type: \"password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Button, {\n            mt: 4,\n            type: \"submit\",\n            isLoading: isSubmitting,\n            variantColor: \"teal\",\n            children: \"login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, _this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Login, \"nRbpaRou4ZuFDO6DKcD51iHnHq0=\", false, function () {\n  return [useRouter, useLoginMutation];\n});\n\n_c = Login;\nexport default withApollo({\n  ssr: false\n})(Login);\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/nicholasharvey/Desktop/programming/techChased/web/src/pages/login.tsx"],"names":["Button","Box","Form","Formik","React","useLoginMutation","withApollo","useRouter","toErrorMap","InputField","Login","router","login","username","password","values","setErrors","variables","response","data","errors","user","query","next","push","isSubmitting","ssr"],"mappings":";;;;;;;;;;AAAA,SAKEA,MALF,EAMEC,GANF,QASO,kBATP;AAUA,SAAgBC,IAAhB,EAAsBC,MAAtB,QAAoC,QAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,UAAT,QAA2B,0BAA3B;;AAKA,IAAMC,KAAmB,GAAG,SAAtBA,KAAsB,OAAQ;AAAA;;AAAA;;AAClC,MAAMC,MAAM,GAAGJ,SAAS,EAAxB;;AADkC,0BAElBF,gBAAgB,EAFE;AAAA;AAAA,MAE3BO,KAF2B;;AAGlC,sBACE,QAAC,MAAD;AACE,IAAA,aAAa,EAAE;AAAEC,MAAAA,QAAQ,EAAE,EAAZ;AAAgBC,MAAAA,QAAQ,EAAE;AAA1B,KADjB;AAEE,IAAA,QAAQ;AAAA,2EAAE,iBAAOC,MAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiBC,gBAAAA,SAAjB,SAAiBA,SAAjB;AAAA;AAAA,uBACeJ,KAAK,CAAC;AAC3BK,kBAAAA,SAAS,EAAEF;AADgB,iBAAD,CADpB;;AAAA;AACFG,gBAAAA,QADE;;AAIR,sCAAIA,QAAQ,CAACC,IAAb,2CAAI,eAAeP,KAAf,CAAqBQ,MAAzB,EAAiC;AAC/BJ,kBAAAA,SAAS,CAACR,UAAU,CAACU,QAAQ,CAACC,IAAT,CAAcP,KAAd,CAAoBQ,MAArB,CAAX,CAAT;AACD,iBAFD,MAEO,uBAAIF,QAAQ,CAACC,IAAb,4CAAI,gBAAeP,KAAf,CAAqBS,IAAzB,EAA+B;AACpC,sBAAI,OAAOV,MAAM,CAACW,KAAP,CAAaC,IAApB,KAA6B,QAAjC,EAA2C;AACzCZ,oBAAAA,MAAM,CAACa,IAAP,CAAYb,MAAM,CAACW,KAAP,CAAaC,IAAzB;AACD,mBAFD,MAEO;AACL;AACAZ,oBAAAA,MAAM,CAACa,IAAP,CAAY,GAAZ;AACD;AACF;;AAbO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;AAAA,OAFV;AAAA,cAkBG;AAAA,UAAGC,YAAH,SAAGA,YAAH;AAAA,0BACC,QAAC,GAAD;AAAA,+BACE,QAAC,IAAD;AAAA,kCACE,QAAC,UAAD;AACE,YAAA,IAAI,EAAC,UADP;AAEE,YAAA,WAAW,EAAC,WAFd;AAGE,YAAA,KAAK,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA,mBADF,eAME,QAAC,GAAD;AAAK,YAAA,EAAE,EAAE,CAAT;AAAA,mCACE,QAAC,UAAD;AACE,cAAA,IAAI,EAAC,UADP;AAEE,cAAA,WAAW,EAAC,UAFd;AAGE,cAAA,KAAK,EAAC,UAHR;AAIE,cAAA,IAAI,EAAC;AAJP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,mBANF,eAcE,QAAC,MAAD;AACE,YAAA,EAAE,EAAE,CADN;AAEE,YAAA,IAAI,EAAC,QAFP;AAGE,YAAA,SAAS,EAAEA,YAHb;AAIE,YAAA,YAAY,EAAC,MAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,eADD;AAAA;AAlBH;AAAA;AAAA;AAAA;AAAA,WADF;AAgDD,CAnDD;;GAAMf,K;UACWH,S,EACCF,gB;;;KAFZK,K;AAqDN,eAAeJ,UAAU,CAAC;AAAEoB,EAAAA,GAAG,EAAE;AAAP,CAAD,CAAV,CAA2BhB,KAA3B,CAAf","sourcesContent":["import {\n  FormControl,\n  FormLabel,\n  Input,\n  FormErrorMessage,\n  Button,\n  Box,\n  Flex,\n  Link,\n} from \"@chakra-ui/react\";\nimport { Field, Form, Formik } from \"formik\";\nimport React from \"react\";\nimport { useLoginMutation } from \"../generated/graphql\";\nimport { withApollo } from \"../utils/withApollo\";\nimport { useRouter } from \"next/router\";\nimport { toErrorMap } from \"../utils/toErrorMap\";\nimport { InputField } from \"../components/inputField\";\nimport NextLink from \"next/link\";\n\ninterface loginProps {}\n\nconst Login: React.FC<{}> = ({}) => {\n  const router = useRouter();\n  const [login] = useLoginMutation();\n  return (\n    <Formik\n      initialValues={{ username: \"\", password: \"\" }}\n      onSubmit={async (values, { setErrors }) => {\n        const response = await login({\n          variables: values,\n        });\n        if (response.data?.login.errors) {\n          setErrors(toErrorMap(response.data.login.errors));\n        } else if (response.data?.login.user) {\n          if (typeof router.query.next === \"string\") {\n            router.push(router.query.next);\n          } else {\n            // worked\n            router.push(\"/\");\n          }\n        }\n      }}\n    >\n      {({ isSubmitting }) => (\n        <Box>\n          <Form>\n            <InputField\n              name=\"username\"\n              placeholder=\"username \"\n              label=\"Username \"\n            />\n            <Box mt={4}>\n              <InputField\n                name=\"password\"\n                placeholder=\"password\"\n                label=\"Password\"\n                type=\"password\"\n              />\n            </Box>\n            <Button\n              mt={4}\n              type=\"submit\"\n              isLoading={isSubmitting}\n              variantColor=\"teal\"\n            >\n              login\n            </Button>\n          </Form>\n        </Box>\n      )}\n    </Formik>\n  );\n};\n\nexport default withApollo({ ssr: false })(Login);\n"]},"metadata":{},"sourceType":"module"}