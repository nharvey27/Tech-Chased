{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/nicholasharvey/Desktop/programming/techChased/web/src/pages/tickets/edit/[id].tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Box, Flex, Button } from \"@chakra-ui/react\";\nimport { Formik, Form } from \"formik\";\nimport router from \"next/router\";\nimport React from \"react\";\nimport { InputField } from \"../../../components/inputField\";\nimport { Layout } from \"../../../components/Layout\";\nimport { useUpdateTicketMutation } from \"../../../generated/graphql\";\nimport { useGetIntId } from \"../../../utils/useGetIntId\";\nimport { useGetTicketFromUrl } from \"../../../utils/useGetTicketFromUrl\";\nimport { withApollo } from \"../../../utils/withApollo\";\n\nconst EditTicket = ({}) => {\n  const [updateTicket] = useUpdateTicketMutation();\n  const {\n    data,\n    error,\n    loading\n  } = useGetTicketFromUrl();\n  const projectId = useGetIntId();\n\n  if (!(data !== null && data !== void 0 && data.ticket)) {\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        children: \"could not find post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    variant: \"small\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        title: data.ticket.title,\n        description: data.ticket.description,\n        status: data.ticket.status,\n        priority: data.ticket.priority\n      },\n      onSubmit: async values => {\n        const {\n          errors\n        } = await updateTicket({\n          variables: {\n            options: _objectSpread({}, values),\n            id: projectId\n          },\n          update: cache => {\n            cache.evict({\n              fieldName: \"tickets:{}\"\n            });\n          }\n        });\n\n        if (!errors) {\n          router.back();\n        }\n      },\n      children: ({\n        isSubmitting\n      }) => /*#__PURE__*/_jsxDEV(Box, {\n        p: 4,\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(InputField, {\n            name: \"title\",\n            placeholder: \"Title\",\n            label: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            mt: 4,\n            children: /*#__PURE__*/_jsxDEV(InputField, {\n              textarea: true,\n              name: \"description\",\n              placeholder: \"Description\",\n              label: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            mt: 4,\n            children: /*#__PURE__*/_jsxDEV(InputField, {\n              textarea: true,\n              name: \"status\",\n              placeholder: \"Status\",\n              label: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            mt: 4,\n            children: /*#__PURE__*/_jsxDEV(InputField, {\n              textarea: true,\n              name: \"priority\",\n              placeholder: \"Priority\",\n              label: \"Priority\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Flex, {\n            justifyContent: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              mt: 4,\n              type: \"submit\",\n              isLoading: isSubmitting,\n              bg: \"teal\",\n              children: \"Update Ticket\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\nexport default withApollo({\n  ssr: false\n})(EditTicket);","map":{"version":3,"sources":["/Users/nicholasharvey/Desktop/programming/techChased/web/src/pages/tickets/edit/[id].tsx"],"names":["Box","Flex","Button","Formik","Form","router","React","InputField","Layout","useUpdateTicketMutation","useGetIntId","useGetTicketFromUrl","withApollo","EditTicket","updateTicket","data","error","loading","projectId","ticket","title","description","status","priority","values","errors","variables","options","id","update","cache","evict","fieldName","back","isSubmitting","ssr"],"mappings":"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","sourcesContent":["import { Box, Flex, Button } from \"@chakra-ui/react\";\nimport { Formik, Form } from \"formik\";\nimport router from \"next/router\";\nimport React from \"react\";\nimport { InputField } from \"../../../components/inputField\";\nimport { Layout } from \"../../../components/Layout\";\nimport { useUpdateTicketMutation } from \"../../../generated/graphql\";\nimport { useGetIntId } from \"../../../utils/useGetIntId\";\nimport { useGetTicketFromUrl } from \"../../../utils/useGetTicketFromUrl\";\nimport { withApollo } from \"../../../utils/withApollo\";\n\ninterface Props {}\n\nconst EditTicket = ({}) => {\n  const [updateTicket] = useUpdateTicketMutation();\n  const { data, error, loading } = useGetTicketFromUrl();\n  const projectId = useGetIntId();\n\n  if (!data?.ticket) {\n    return (\n      <Layout>\n        <Box>could not find post</Box>\n      </Layout>\n    );\n  }\n  return (\n    <Layout variant=\"small\">\n      <Formik\n        initialValues={{\n          title: data.ticket.title,\n          description: data.ticket.description,\n          status: data.ticket.status,\n          priority: data.ticket.priority,\n        }}\n        onSubmit={async (values) => {\n          const { errors } = await updateTicket({\n            variables: { options: { ...values }, id: projectId },\n            update: (cache) => {\n              cache.evict({ fieldName: \"tickets:{}\" });\n            },\n          });\n          if (!errors) {\n            router.back();\n          }\n        }}\n      >\n        {({ isSubmitting }) => (\n          <Box p={4}>\n            <Form>\n              <InputField name=\"title\" placeholder=\"Title\" label=\"Title\" />\n              <Box mt={4}>\n                <InputField\n                  textarea\n                  name=\"description\"\n                  placeholder=\"Description\"\n                  label=\"Description\"\n                />\n              </Box>\n              <Box mt={4}>\n                <InputField\n                  textarea\n                  name=\"status\"\n                  placeholder=\"Status\"\n                  label=\"Status\"\n                />\n              </Box>\n              <Box mt={4}>\n                <InputField\n                  textarea\n                  name=\"priority\"\n                  placeholder=\"Priority\"\n                  label=\"Priority\"\n                />\n              </Box>\n\n              <Flex justifyContent=\"center\">\n                <Button mt={4} type=\"submit\" isLoading={isSubmitting} bg=\"teal\">\n                  Update Ticket\n                </Button>\n              </Flex>\n            </Form>\n          </Box>\n        )}\n      </Formik>\n    </Layout>\n  );\n};\nexport default withApollo({ ssr: false })(EditTicket);\n"]},"metadata":{},"sourceType":"module"}