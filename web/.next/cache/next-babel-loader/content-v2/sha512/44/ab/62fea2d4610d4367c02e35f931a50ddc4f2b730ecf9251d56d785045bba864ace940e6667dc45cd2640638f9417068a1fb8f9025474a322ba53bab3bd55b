{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/nicholasharvey/Desktop/programming/techChased/web/src/pages/projects/[id].tsx\";\nimport { Box, Grid, GridItem, Heading } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { Layout } from \"../../components/Layout\";\nimport { useGetProjectFromUrl } from \"../../utils/useGetProjectFromUrl\";\nimport { withApollo } from \"../../utils/withApollo\";\n\nconst Project = ({}) => {\n  const {\n    data,\n    error,\n    loading\n  } = useGetProjectFromUrl();\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"loading..\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (!(data !== null && data !== void 0 && data.project)) {\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        children: \" Could not find project.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        mb: 6,\n        children: [\"Details for project \", data.project.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          templateColumns: \"repeat(6, 1fr)\",\n          templateRows: \"repeat(2, 1fr)\",\n          children: [/*#__PURE__*/_jsxDEV(GridItem, {\n            colSpan: 3,\n            bg: \"\",\n            children: [/*#__PURE__*/_jsxDEV(Heading, {\n              mb: 2,\n              size: \"xs\",\n              children: \"Project Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Heading, {\n              size: \"md\",\n              ml: 2,\n              children: data.project.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n            colSpan: 3,\n            bg: \"\",\n            children: [/*#__PURE__*/_jsxDEV(Heading, {\n              mb: 2,\n              size: \"xs\",\n              children: \"Project Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Heading, {\n              size: \"md\",\n              ml: 2,\n              children: data.project.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n            colSpan: 2,\n            children: [/*#__PURE__*/_jsxDEV(Heading, {\n              size: \"md\",\n              children: \"Assigned Personnel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Heading, {\n              size: \"xs\",\n              ml: 2,\n              children: \"Current useres on this Project\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              bg: \"cyan.50\",\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                templateColumns: \"repeat(4,1fr)\",\n                children: [/*#__PURE__*/_jsxDEV(GridItem, {\n                  colSpan: 2,\n                  children: \"User Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n                  colSpan: 2,\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 19\n                }, this), data.project.users.map(user => !user ? null : /*#__PURE__*/_jsxDEV(GridItem, {\n                  colSpan: 2\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 36\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n            colSpan: 4,\n            children: [/*#__PURE__*/_jsxDEV(Heading, {\n              size: \"md\",\n              children: \"Tickets for this project\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Heading, {\n              size: \"xs\",\n              ml: 2,\n              children: \"Ticket details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              bg: \"rebeccapurple\",\n              children: \"test\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\nexport default withApollo({\n  ssr: true\n})(Project);","map":{"version":3,"sources":["/Users/nicholasharvey/Desktop/programming/techChased/web/src/pages/projects/[id].tsx"],"names":["Box","Grid","GridItem","Heading","React","Layout","useGetProjectFromUrl","withApollo","Project","data","error","loading","message","project","id","title","description","users","map","user","ssr"],"mappings":"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","sourcesContent":["import { Box, Grid, GridItem, Heading } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { Layout } from \"../../components/Layout\";\nimport { useGetProjectFromUrl } from \"../../utils/useGetProjectFromUrl\";\nimport { withApollo } from \"../../utils/withApollo\";\n\ninterface ProjcetProps {}\n\nconst Project = ({}) => {\n  const { data, error, loading } = useGetProjectFromUrl();\n  if (loading) {\n    return (\n      <Layout>\n        <div>loading..</div>\n      </Layout>\n    );\n  }\n\n  if (error) {\n    return <div>{error.message}</div>;\n  }\n  if (!data?.project) {\n    return (\n      <Layout>\n        <Box> Could not find project.</Box>\n      </Layout>\n    );\n  }\n\n  return (\n    <>\n      <Layout>\n        <Heading mb={6}>Details for project {data.project.id}</Heading>\n        <Box>\n          <Grid\n            templateColumns={\"repeat(6, 1fr)\"}\n            templateRows={\"repeat(2, 1fr)\"}\n          >\n            <GridItem colSpan={3} bg=\"\">\n              <Heading mb={2} size={\"xs\"}>\n                Project Name\n              </Heading>\n              <Heading size={\"md\"} ml={2}>\n                {data.project.title}\n              </Heading>\n            </GridItem>\n            <GridItem colSpan={3} bg=\"\">\n              <Heading mb={2} size={\"xs\"}>\n                Project Description\n              </Heading>\n              <Heading size={\"md\"} ml={2}>\n                {data.project.description}\n              </Heading>\n            </GridItem>\n            <GridItem colSpan={2}>\n              <Heading size={\"md\"}>Assigned Personnel</Heading>\n              <Heading size={\"xs\"} ml={2}>\n                Current useres on this Project\n              </Heading>\n              <Box bg={\"cyan.50\"}>\n                <Grid templateColumns={\"repeat(4,1fr)\"}>\n                  <GridItem colSpan={2}>User Name</GridItem>\n                  <GridItem colSpan={2}>Email</GridItem>\n                  {data.project.users.map((user) =>\n                    !user ? null : <GridItem colSpan={2}></GridItem>\n                  )}\n                </Grid>\n              </Box>\n            </GridItem>\n            <GridItem colSpan={4}>\n              <Heading size={\"md\"}>Tickets for this project</Heading>\n              <Heading size={\"xs\"} ml={2}>\n                Ticket details\n              </Heading>\n              <Box bg={\"rebeccapurple\"}>test</Box>\n            </GridItem>\n          </Grid>\n        </Box>\n      </Layout>\n    </>\n  );\n};\n\nexport default withApollo({ ssr: true })(Project);\n"]},"metadata":{},"sourceType":"module"}